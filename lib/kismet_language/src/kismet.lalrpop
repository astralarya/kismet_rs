use std::str::FromStr;
use super::ast::{Expr, Op};

grammar;

pub Kismet: Expr = {
  Expr
}

Expr: Expr = {
  <l:Expr> <o:OpAdd> <r:Factor> => Expr::Op(Box::new(l), o, Box::new(r)),
  Factor,
}

Factor: Expr = {
  <l:Factor> <o:OpMul> <r:Term> => Expr::Op(Box::new(l), o, Box::new(r)),
  Term,
}

Term: Expr = {
  "(" <e:Expr> ")" => Expr::Paren(Box::new(e)),
  Num,
}

//

Num: Expr = {
  <s:r"[0-9]+"> => Expr::Number(i32::from_str(s).unwrap())
}

OpAdd: Op = {
  "+" => Op::Add,
  "-" => Op::Sub,
}

OpMul: Op = {
  "*" => Op::Mul,
  "/" => Op::Sub,
}